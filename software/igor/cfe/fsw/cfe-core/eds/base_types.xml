<?xml version="1.0" encoding="UTF-8"?>
<!--

    GSC-18128-1, "Core Flight Executive Version 6.6"

    Copyright (c) 2006-2019 United States Government as represented by
    the Administrator of the National Aeronautics and Space Administration.
    All Rights Reserved.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
      
    This document adheres to the Electronic Data Sheet (EDS) XML schema 
    as prescribed in CCSDS book 876.0. 
      
    Purpose: 
      This describes stardard data types used throughout the Core Flight System
      
-->
<DataSheet xmlns="http://www.ccsds.org/schema/sois/seds">
<Namespace name="BASE_TYPES" shortDescription="Standard type defintions for Core Flight System">

   <!-- Define "base" data types for which all other containers/interfaces/etc will use -->
   <DataTypeSet>

      <BooleanDataType name="StatusBit" shortDescription="Single true/false status bit" />
      
      <!-- Fixed width integer types -->
      <IntegerDataType name="int8" shortDescription="Signed 8 bit integer">
        <IntegerDataEncoding sizeInBits="8" encoding="${CFE_MISSION/SIGNED_INTEGER_ENCODING}" />
      </IntegerDataType>
      <IntegerDataType name="uint8" shortDescription="Unsigned 8 bit integer">
        <IntegerDataEncoding sizeInBits="8" encoding="unsigned" />
      </IntegerDataType>
      <IntegerDataType name="int16" shortDescription="Signed 16 bit integer">
        <IntegerDataEncoding sizeInBits="16" encoding="${CFE_MISSION/SIGNED_INTEGER_ENCODING}" />
      </IntegerDataType>
      <IntegerDataType name="uint16" shortDescription="Unsigned 16 bit integer">
        <IntegerDataEncoding sizeInBits="16" encoding="unsigned" />
      </IntegerDataType>
      <IntegerDataType name="int32" shortDescription="Signed 32 bit integer">
        <IntegerDataEncoding sizeInBits="32" encoding="${CFE_MISSION/SIGNED_INTEGER_ENCODING}" />
      </IntegerDataType>
      <IntegerDataType name="uint32" shortDescription="Unsigned 32 bit integer">
        <IntegerDataEncoding sizeInBits="32" encoding="unsigned" />
      </IntegerDataType>
      <IntegerDataType name="int64" shortDescription="Signed 64 bit integer">
        <IntegerDataEncoding sizeInBits="64" encoding="${CFE_MISSION/SIGNED_INTEGER_ENCODING}" />
      </IntegerDataType>
      <IntegerDataType name="uint64" shortDescription="Unsigned 64 bit integer">
        <IntegerDataEncoding sizeInBits="64" encoding="unsigned" />
      </IntegerDataType>
      
      <!-- Floating point types -->
      <FloatDataType name="float" shortDescription="Single precision (32 bit) floating point value">
        <FloatDataEncoding encodingAndPrecision="ieee754_2008_single" />
      </FloatDataType>
      <FloatDataType name="double" shortDescription="Double precision (64 bit) floating point value">
        <FloatDataEncoding encodingAndPrecision="ieee754_2008_double" />
      </FloatDataType>
      
      <!-- Commonly used string types in all CFE/CFS messages -->
      <StringDataType name="ApiName" length="${CFE_MISSION/MAX_API_LEN}" />
      <StringDataType name="PathName" length="${CFE_MISSION/MAX_PATH_LEN}" />
      
      <!-- 
        CPU memory addresses in messages can be either 32 or 64 bits.
        This depends on specific CPUs in use, but it should be consistent
        across all cpus.
       -->
      <IntegerDataType name="CpuAddress" shortDescription="CPU memory address">
        <IntegerDataEncoding sizeInBits="${CFE_MISSION/MAX_CPU_ADDRESS_SIZE} * 8" encoding="unsigned" />
      </IntegerDataType>

      <!--
        The following data types are a test/example of how 20-bit microseconds
        can be used in outgoing telemetry packets.  It defines a container with
        a 20 bit "Micros" field followed by 12 bits of padding to create 32 bits.
        If this is desired then two configuration parameters need to change:
         - Set the 'TELEMETRY_SUBSECONDS_TYPE' EDS directive
         - Set the 'CFE_SB_PACKET_TIME_SUBSECONDS_UNITS' config directive
        And uncomment these types... 
        
        
      <IntegerDataType name="MicrosecondsValue">
        <IntegerDataEncoding sizeInBits="20" encoding="unsigned" />
      </IntegerDataType>
      <IntegerDataType name="MicrosecondsPad">
        <IntegerDataEncoding sizeInBits="12" encoding="unsigned" />
      </IntegerDataType>
      
      <ContainerDataType name="TlmMicrosecs">
        <EntryList>
            <Entry name="Micros" type="MicrosecondsValue" />
            <Entry name="Pad" type="MicrosecondsPad" />
        </EntryList>
      </ContainerDataType>
      
      -->
              
   </DataTypeSet>
   
</Namespace>
</DataSheet>
